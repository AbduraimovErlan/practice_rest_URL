from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import authentication, permissions
from django.contrib.auth.models import User


class ListUsers(APIVeiw):
"""
view to list all users in the system
*Requires token authentication.
*Only admin users are able to access this view
"""

authentication_classes = (authentication.TokenAuthentication,)
permission_classes = (permissions.IsAdminUser,)

def get(self, request, format=None):
"""
Return a list of all users.
"""
usernames = [user.username for user in User.objects.all()]
return Response(usernames)





.renderer_classes
.parser_classes
.authentication_classes
.throttle_classes
.permission_classes
.content_negotiaton_class

.get_renderers(self)
.get_parsers(self)
.get_authenticators(self)
.get_throttles(self)
.get_permissions(self)
.get_content_negotiator(self)
.get_exception_handler(self)

.check_permissions(self, request)
.check_throttles(self, request)
.perform_content_negotiation(self, request, force=False)

.dispatch()
.get()
.post()
.put()
.patch()
.delete()

.initial(self, request, *args, **kwargs
.handle_exception(self, exc)
.initialize_request(self, request, *args, **kwargs)
.finalize_response(self, request, response, *args, **kwargs)
.@api_view()


from rest_framework.decorators import api_view

@api_view()
def hello_world(request):
    return Response({"message": "Hello world!"})

@api_view(['GET', 'POST'])
def hello_world(request):
        if request.method == "POST"
            return Response({"message": "Got some data!", "data": request.data})
        return Response({"message": "Hello, world!"})


from rest_framework.decorators import api_view, throttle_classes
from rest_framework.throttling import UserRateThrottle

class OncePerDayUserThrottle(UserRateThrottle):
    rate = '1/day'

@api_view(['GET'])
@throttle_classes([OncePerDayUserThrottle])
def view(request):
    return Response({"message": "Hello for today! See you tomorrow!"})


.@renderer_classes(...)
.@parser_classes(...)
.@authentication_classes(...)
.@throttle_classes(...)
.@permission_classes(...)



from rest_framework.decorators import api_view, schema
from rest_framework.schemas import AutoSchema

class CustomAutoSchema(AutoSchema):
    def get_link(self, path, method, base_url):


@api_view(['GET'])
@schema(CustomAutoSchema())
def view(request):
    return Response({"message": "Hello for today! See you tomorrow!"})

@api_view(['GET'])
@schema(None)
def view(request):
    return Response({"message": "will not appear in schema!"})